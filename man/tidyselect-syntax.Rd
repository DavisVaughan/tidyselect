% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/select.R
\name{tidyselect-syntax}
\alias{tidyselect-syntax}
\title{The syntax and semantics of tidyselect}
\description{
This is a technical description of the tidyselect interface.
}
\section{Dots, \code{c()}, and unary \code{-}}{


tidyselect functions can take dots like \code{dplyr::select()}, or a
named argument like \code{tidyr::pivot_longer()}. In the latter case,
the dots syntax is accessible via \code{c()}. In fact \code{...} syntax is
implemented through \code{c(...)} and is thus completely equivalent.\preformatted{# There is no semantical differences between these two expressions
dplyr::select(mtcars, mpg, disp:am)
dplyr::select(mtcars, c(mpg, disp:am))
}

Dots and \code{c()} are syntax for:
\itemize{
\item Set union
\item Set difference or complement, in combination with unary \code{-}
\item Renaming variables
}

Non-negative inputs are recursively joined with \code{union()}. The
precedence is left-associative, just like with boolean operators.
These expressions are all syntax for \emph{set union}:\preformatted{iris \%>\% select(starts_with("Sepal"), ends_with("Width"), Species)
iris \%>\% select(starts_with("Sepal") | ends_with("Width") | Species)
iris \%>\% select(union(union(starts_with("Sepal"), ends_with("Width")), 5L))
}

Unary \code{-} is normally syntax for \emph{set difference}:\preformatted{iris \%>\% select(starts_with("Sepal"), -ends_with("Width"), -Sepal.Length)
iris \%>\% select(setdiff(setdiff(starts_with("Sepal"), ends_with("Width")), 1L))
}

If the first \code{...} or \code{c()} input is negative, an implicit
\code{everything()} is appended. In this case, unary \code{-} is syntax for
\emph{set complement}.\preformatted{iris \%>\% select(-starts_with("Sepal"))
iris \%>\% select(everything(), -starts_with("Sepal"))
iris \%>\% select(!starts_with("Sepal"))
}

Unary \code{-} cannot be used outside \code{...} or \code{c()}.
}

